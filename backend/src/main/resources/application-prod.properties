# ==================================================
# CONFIGURACAO DO PERFIL 'PROD' (MYSQL DATABASE)
# ==================================================

# --------------------------------------------------
# DESABILITAR COMPONENTES DE DESENVOLVIMENTO
# --------------------------------------------------
# Desativa o console H2, ja que nao sera usado em producao/Docker.
spring.h2.console.enabled=false

# --------------------------------------------------
# CONFIGURACAO DO DATASOURCE (MYSQL)
# --------------------------------------------------
# ATENCAO: Se estiver rodando no Docker, o 'localhost' deve ser substituido
# pelo nome do servico MySQL no seu docker-compose.yml (ex: 'mysql-db').
spring.datasource.url=jdbc:mysql://localhost:3306/mydb
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=admin
spring.datasource.password=123
spring.sql.init.data-locations=classpath:./dataprod/data-prod.sql
#spring.sql.init.data-locations=classpath:./dataprod/data-organizador.sql
#spring.sql.init.data-locations=classpath:./dataprod/data-palestrante.sql
#spring.sql.init.data-locations=classpath:./dataprod/data-atividade.sql

# --------------------------------------------------
# CONFIGURACAO JPA / HIBERNATE (MYSQL)
# --------------------------------------------------
# Define o dialeto correto.
# Mantenha o DDL-Auto em 'validate' ou 'update' para o MySQL, 
# dependendo da sua estrategia de migracao.
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
